# -*- coding: utf-8 -*-
"""vehicle detected.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1F5WWhT3gGANz949taWh4BlLBeOWWd_7c
"""

!pip install ultralytics

from ultralytics import YOLO

!pip install ultralytics
# Install YOLOv5 first: pip install ultralytics
from ultralytics import YOLO
import cv2
import matplotlib.pyplot as plt

# Load YOLOv5 model
model = YOLO("yolov5s.pt")  # Use 'yolov5s' or your preferred version

# Load and process image
image_path = "/content/traffic.jpg"
results = model(image_path)

# Display results
results[0].show()  # Show bounding boxes on the image

# Count only vehicle classes
vehicle_classes = ['car', 'bus', 'truck', 'motorbike']
vehicle_count = sum(1 for result in results[0].boxes.cls if model.names[int(result)] in vehicle_classes)

print(f"Vehicles detected: {vehicle_count}")

# Step 1: Install YOLO (only once)
!pip install ultralytics

# Step 2: Import libraries
from ultralytics import YOLO
import urllib.request
import matplotlib.pyplot as plt
import cv2

# Step 3: Download a sample traffic image
url = "https://raw.githubusercontent.com/ultralytics/yolov5/master/data/images/zidane.jpg"  # you can replace with real traffic image URL
urllib.request.urlretrieve(url, "traffic.jpg")

# Step 4: Load the model
model = YOLO("yolov5s.pt")  # You can also try yolov5m.pt, yolov5l.pt, etc.

# Step 5: Run inference
results = model("traffic.jpg")

# Step 6: Filter and count vehicles
vehicle_classes = ['car', 'bus', 'truck', 'motorbike']
count = 0
for box in results[0].boxes:
    cls_id = int(box.cls)
    cls_name = model.names[cls_id]
    if cls_name in vehicle_classes:
        count += 1

print(f"Vehicles detected: {count}")

# Step 7: Show image with detections
results[0].show()  # This will pop up a window with bounding boxes (in Colab it shows inline)